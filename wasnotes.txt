

                        -3  -1   1       4   6       9   11
                       -4  -2   0   2   3   5   7   8   10  12
  .___________________________________________________________________________.
  :  | |  |  | | | |  |  | | | | | |  |  | | | |  |  | | | | | |  |  | | | |  :
  :  | |  |  | | | |  |  | | | | | |  |  | | | |  |  | | | | | |  |  | | | |  :
  :  | |  |  | | | |  |  | | | | | |  |  | | | |  |  | | | | | |  |  | | | |  :
<-:  |_|  |  |_| |_|  |  |_| |_| |_|  |  |_| |_|  |  |_| |_| |_|  |  |_| |_|  :->
  :   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   :
  : A | B | C | D | E | F | G | A | B | C | D | E | F | G | A | B | C | D | E :
  :___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___: 
    ^                           ^           ^               ^           ^
  220 Hz                      440 Hz      523.25 Hz       880 Hz     1174.65 Hz
(-1 Octave)                 (middle A)                 (+1 Octave)



Each octave, 12 semitones, doubles frequency
	
	baseFrequency * Math.pow(2, noteOffset / 12);

		- to transpose up 7 semitones, ex:

			oscillator.frequency.value = 440*Math.pow(2, 7/12);   // 659.255

		- to transpose down 14 semitones:

			oscillator.frequency.value = 440*Math.pow(2, -14/12); // 195.998

		- alternatively, use detune to transpose 1/100 semitones:
				in this case, 7 semitones: 
					oscillator.detune.value = 700;	// noteOffset*100


Filters
	BiquadFilterNode
			highpass
			lowpass

			bandpass
				Only allows frequencies that are within a certain tolerance of frequency specified by Q.
					The greater the Q value, the smaller the frequency band.
						ex:
							// filter out all frequencies that are not near 1000 Hz
							filter.type = 'bandpass'
							filter.frequency.value = 1000
							filter.Q.value = 1

			lowshelf
			highshelf
			peaking
			notch
			allpass


